name: Helm Chart Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger on semantic version tags (v1.2.3)
  workflow_dispatch:
    inputs:
      version:
        description: "Override chart version (leave empty to use git tag)"
        required: false

permissions:
  contents: write
  pages: write
  packages: write

jobs:
  release-chart:
    name: Release Helm Chart
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Extract Version
        id: extract_version
        run: |
          # If manually triggered with version input, use that
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.version }}" != "" ]]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "Using manually provided version: $VERSION"
          else
            # Extract version from git tag (remove 'v' prefix)
            TAG=${GITHUB_REF#refs/tags/}
            VERSION=${TAG#v}
            echo "Using version from git tag: $VERSION"
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Chart Version
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"

          # Update Chart.yaml version
          CHART_PATH="helm/timesheet-filler/Chart.yaml"
          sed -i "s/^version:.*/version: $VERSION/" $CHART_PATH

          # If appVersion is used, update that too
          sed -i "s/^appVersion:.*/appVersion: $VERSION/" $CHART_PATH

          echo "Updated chart version to $VERSION"
          cat $CHART_PATH

          # Commit the version change
          git add $CHART_PATH
          git commit -m "Bump chart version to $VERSION [skip ci]"
          git push origin ${GITHUB_REF_NAME}

      - name: Release Helm Charts
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          charts_dir: helm

      - name: Wait for GitHub Pages
        run: |
          echo "Waiting for GitHub Pages to update (30s)..."
          sleep 30

      - name: Verify Chart Release
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          echo "Attempting to verify chart version $VERSION was published..."
          MAX_ATTEMPTS=5
          ATTEMPT=1
          SUCCESS=false

          while [ $ATTEMPT -le $MAX_ATTEMPTS ] && [ "$SUCCESS" = false ]; do
            echo "Verification attempt $ATTEMPT of $MAX_ATTEMPTS"
            if curl -s -f https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml > /dev/null; then
              echo "✅ index.yaml found!"
              if curl -s https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml | grep -q "timesheet-filler-$VERSION"; then
                echo "✅ Chart 'timesheet-filler-$VERSION' found in index.yaml!"
                SUCCESS=true
              else
                echo "❌ Chart 'timesheet-filler-$VERSION' not found in index.yaml"
              fi
            else
              echo "❌ index.yaml not available yet"
            fi

            if [ "$SUCCESS" = false ]; then
              if [ $ATTEMPT -lt $MAX_ATTEMPTS ]; then
                echo "Waiting 15 seconds before next attempt..."
                sleep 15
              fi
              ATTEMPT=$((ATTEMPT+1))
            fi
          done

          if [ "$SUCCESS" = true ]; then
            echo "Verification successful! Chart version $VERSION has been published."
          else
            echo "Warning: Could not verify chart publication after $MAX_ATTEMPTS attempts."
            echo "This does not necessarily mean the release failed - GitHub Pages may just take longer to update."
            echo "Check https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml manually."
          fi
