name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "**.go"
      - "**/*.go"
      - "go.mod"
      - "go.sum"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-arm64:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-HHmmss' tz='UTC'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=arm64

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}, arm64
          platforms: linux/arm64
          file: ./Dockerfile

  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: |
            /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-HHmmss' tz='UTC'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=amd64

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          file: ./Dockerfile

  push:
    runs-on: ubuntu-latest
    needs: [build-arm64, build-amd64]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create and push multi-arch manifest
        env:
          DOCKER_HUB_USERNAME: ${{ github.actor }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          docker manifest create ${{ github.actor }}/${{ env.IMAGE_NAME }}:latest \
            --amend ${{ github.actor }}/${{ env.IMAGE_NAME }}:amd64 \
            --amend ${{ github.actor }}/${{ env.IMAGE_NAME }}:arm64
          docker manifest push ${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
