name: Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
    paths:
      - "**.go"
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - "**/*.html"
      - Dockerfile

env:
  REGISTRY: ghcr.io

jobs:
  build-arm64:
    runs-on: self-hosted
    outputs:
      repo_lowercase: ${{ steps.repo_name.outputs.repo_lowercase }}
      tag: ${{ steps.tag.outputs.tag }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        id: repo_name
        run: |
          REPO="${{ github.repository }}"
          echo "repo_lowercase=${REPO,,}" >> $GITHUB_OUTPUT

      - name: Set image tag
        id: tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG="${{ github.ref_name }}"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:arm64-${{ steps.tag.outputs.tag }}
          provenance: false
          sbom: false

  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        id: repo_name
        run: |
          REPO="${{ github.repository }}"
          echo "repo_lowercase=${REPO,,}" >> $GITHUB_OUTPUT

      - name: Set image tag
        id: tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG="${{ github.ref_name }}"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:amd64-${{ steps.tag.outputs.tag }}
          provenance: false
          sbom: false

  create-manifest:
    needs: [build-arm64, build-amd64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        id: repo_name
        run: |
          REPO="${{ github.repository }}"
          echo "repo_lowercase=${REPO,,}" >> $GITHUB_OUTPUT

      - name: Set image tag
        id: tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG="${{ github.ref_name }}"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Create manifest Dockerfile
        run: |
          cat << EOF > Dockerfile.manifest
          FROM scratch
          # This is just a placeholder Dockerfile for manifest creation
          CMD ["echo", "This is just a manifest, not a real image"]
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-architecture manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:${{ steps.tag.outputs.tag }}
          sources: |
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:amd64-${{ steps.tag.outputs.tag }}
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:arm64-${{ steps.tag.outputs.tag }}

      - name: Create version tag manifests
        if: startsWith(github.ref, 'refs/tags/v')
        uses: int128/docker-manifest-create-action@v2
        with:
          sources: |
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:amd64-${{ steps.tag.outputs.tag }}
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo_lowercase }}:arm64-${{ steps.tag.outputs.tag }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
